<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小夏要努力呀</title>
  
  
  <link href="http://xxynly.xyz/atom.xml" rel="self"/>
  
  <link href="http://xxynly.xyz/"/>
  <updated>2021-03-21T15:49:04.903Z</updated>
  <id>http://xxynly.xyz/</id>
  
  <author>
    <name>xxynly</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>web一：web运行基础环境搭建</title>
    <link href="http://xxynly.xyz/2021/03/21/web%E8%BF%90%E8%A1%8C%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://xxynly.xyz/2021/03/21/web%E8%BF%90%E8%A1%8C%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-03-21T11:28:30.000Z</published>
    <updated>2021-03-21T15:49:04.903Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web一：-web运行基础环境搭建"><a href="#web一：-web运行基础环境搭建" class="headerlink" title="web一： web运行基础环境搭建"></a>web一： web运行基础环境搭建</h1><h1 id="环境"><a href="#环境" class="headerlink" title=" 环境"></a><span id="head1"> 环境</span></h1><p><img src="media/16159613145362.jpg"><br>首先先分解一下具体内容<br><strong>linux：</strong><br>所采用的系统，我选取的是ubuntu-18.04，ubuntu是基于debian linux的，桌面、服务器体验较好，并且免费；</p><p><strong>nginx：</strong><br>高性能的HTTP和反向代理web服务器，基于nginx搭建过hexo博客网站和一个google学术镜像站，所以还算熟悉；</p><p><strong>php：</strong><br>phpstudy比较方便，也没有自己安装过环境。</p><p><strong>fpm：</strong><br>PHP-FPM(FastCGI Process Manager：FastCGI进程管理器)是一个PHPFastCGI管理器</p><p><strong>mysql：</strong><br>数据库管理系统，使用较多。</p><p><strong>nginx+lua</strong><br><a href="https://www.cnblogs.com/chopper-poet/p/10744214.html">https://www.cnblogs.com/chopper-poet/p/10744214.html</a></p><h1 id="注：实际安装时，会出现各种各样的错误，所以在没有把握时，一定要提前拍快照，我在分解的每一部分前都拍了，php连接mysql那真的是救了我好几次！！！"><a href="#注：实际安装时，会出现各种各样的错误，所以在没有把握时，一定要提前拍快照，我在分解的每一部分前都拍了，php连接mysql那真的是救了我好几次！！！" class="headerlink" title="注：实际安装时，会出现各种各样的错误，所以在没有把握时，一定要提前拍快照，我在分解的每一部分前都拍了，php连接mysql那真的是救了我好几次！！！"></a>注：实际安装时，会出现各种各样的错误，所以在没有把握时，一定要提前<strong>拍快照</strong>，我在分解的每一部分前都拍了，php连接mysql那真的是救了我好几次！！！</h1><h2 id="一、ubuntu"><a href="#一、ubuntu" class="headerlink" title=" 一、ubuntu"></a><span id="ubuntu"> 一、ubuntu</span></h2><p>安装后，需要做几件事，方便以后的使用。</p><h3 id="1-更换国内源"><a href="#1-更换国内源" class="headerlink" title="1.更换国内源"></a>1.更换国内源</h3><p>我使用的是select best server，也可以自己直接选取阿里源、清华源等等<br><img src="media/1.jpg" alt="1"><br>然后手动更新：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">suso apt-get upgrade</span><br></pre></td></tr></table></figure><h3 id="2-安装python2-，pip2-，pip3"><a href="#2-安装python2-，pip2-，pip3" class="headerlink" title="2.安装python2 ，pip2 ，pip3"></a>2.安装python2 ，pip2 ，pip3</h3><p>ubunt里安装了python3，在实际学习的过程中，发现很多工具仍用到python2，所以这里安装下python2.7，并配置使他与python3共存。</p><p>ubuntu中python共存解决的比较顺利，但实际我在mac anaconda的共存一直没有弄好。py3.7以后的anaconda会默认替换掉python2环境，虽然仍可以使用，但是工具和包经常使用不了。现在是使用的是anaconda 5.2，不知道有没有更妥善的解决方法。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install python2.7</span><br><span class="line">sudo apt install python-minimal</span><br><span class="line">sudo apt install curl</span><br><span class="line">curl https:&#x2F;&#x2F;bootstrap.pypa.io&#x2F;get-pip.py -o get-pip.py</span><br></pre></td></tr></table></figure><p>执行<code>sudo python3 get-pip.py</code>出错</p><p><img src="media/2.jpg" alt="2"><br>执行以下命令:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt-get install python3-distutils</span><br><span class="line">sudo python3 get-pip.py</span><br></pre></td></tr></table></figure><p>报错<br><img src="media/3.jpg" alt="3"><br>执行：</p><p><code>sudo apt install python3-testresources</code>，成功</p><p>安装pip2</p><p>执行:</p><p><code>sudo python2 get-pip.py</code></p><p>报错:</p><p><code>ERROR: This script does not work on Python 2.7 The minimum supported Python version is 3.6. Please use https://bootstrap.pypa.io/pip/2.7/get-pip.py instead.</code></p><p>执行:</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl https:&#x2F;&#x2F;bootstrap.pypa.io&#x2F;pip&#x2F;2.7&#x2F;get-pip.py -o get-pip.py</span><br><span class="line">sudo python2 get-pip.py</span><br></pre></td></tr></table></figure><p>键入<code>whereis pip</code> 验证，成功</p><p>自定义alias别名：</p><p><code>gedit ~/.bashrc</code></p><p>打开文件后，在最后一行加：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">alias pip&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;pip3.6</span><br><span class="line">alias python&#x3D;&#x2F;usr&#x2F;bin&#x2F;python3.6</span><br></pre></td></tr></table></figure><p>更新环境：</p><p><code>source ~/.bashrc</code></p><h3 id="3-安装vim"><a href="#3-安装vim" class="headerlink" title="3.安装vim"></a>3.安装vim</h3><p><code>sudo apt install vim</code></p><p>参考：<br><a href="https://blog.csdn.net/hymanjack/article/details/80285400">https://blog.csdn.net/hymanjack/article/details/80285400</a><br><a href="https://blog.csdn.net/festone000/article/details/103726558/">https://blog.csdn.net/festone000/article/details/103726558/</a><br><a href="https://gist.github.com/y56/0540d22a1db40dacc7fbbb93c866821e">https://gist.github.com/y56/0540d22a1db40dacc7fbbb93c866821e</a><br><a href="https://blog.csdn.net/fanxianchao_2012/article/details/114010920">https://blog.csdn.net/fanxianchao_2012/article/details/114010920</a></p><h2 id="二、nginx"><a href="#二、nginx" class="headerlink" title=" 二、nginx"></a><span id="nginx"> 二、nginx</span></h2><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">lsb_release -a #检查发发行版本</span><br><span class="line">sudo apt-get install nginx #安装</span><br><span class="line">systemctl status nginx #验证</span><br></pre></td></tr></table></figure><h3 id="2-配置防火墙访问-Configuring-Firewall-Access"><a href="#2-配置防火墙访问-Configuring-Firewall-Access" class="headerlink" title="2.配置防火墙访问 (Configuring Firewall Access)"></a>2.配置防火墙访问 (Configuring Firewall Access)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 80&#x2F;tcp #防火墙放行80端口</span><br><span class="line">sudo ufw allow 443&#x2F;tcp #放行443端口</span><br></pre></td></tr></table></figure><h3 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用"></a>3.使用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl start nginx #启动</span><br><span class="line">systemctl stop nginx #停止</span><br><span class="line">systemctl restart nginx #重启</span><br><span class="line">systemctl reload nginx #重新加载</span><br><span class="line">systemctl disable nginx #禁止自启动</span><br><span class="line">systemctl enable nginx #启用自启动</span><br></pre></td></tr></table></figure><p>127.0.0.1 成功访问</p><p>参考：<br><a href="https://blog.csdn.net/cunchi4221/article/details/107477942">https://blog.csdn.net/cunchi4221/article/details/107477942</a></p><h2 id="三、mysql"><a href="#三、mysql" class="headerlink" title=" 三、mysql"></a><span id="mysql"> 三、mysql</span></h2><h3 id="1-安装-1"><a href="#1-安装-1" class="headerlink" title="1.安装"></a>1.安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apt install mysql-server #安装</span><br><span class="line">sudo apt install net-tools</span><br><span class="line">netstat -tap | grep mysql #查看mysql是否安装成功</span><br><span class="line">sudo mysql -u root -p #连接mysql，默认无密码，回车进入</span><br></pre></td></tr></table></figure><h3 id="2-为了确保数据库的安全性和正常运转，对数据库进行初始化操作。这个初始化操作涉及下面5个步骤。"><a href="#2-为了确保数据库的安全性和正常运转，对数据库进行初始化操作。这个初始化操作涉及下面5个步骤。" class="headerlink" title="2.为了确保数据库的安全性和正常运转，对数据库进行初始化操作。这个初始化操作涉及下面5个步骤。"></a>2.为了确保数据库的安全性和正常运转，对数据库进行初始化操作。这个初始化操作涉及下面5个步骤。</h3><p>（1）安装验证密码插件。<br>（2）设置root管理员在数据库中的专有密码。<br>（3）随后删除匿名账户，并使用root管理员从远程登录数据库，以确保数据库上运行的业务的安全性。<br>（4）删除默认的测试数据库，取消测试数据库的一系列访问权限。<br>（5）刷新授权列表，让初始化的设定立即生效。</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo mysql_secure_installation #安装</span><br><span class="line">Would you like to setup VALIDATE PASSWORD plugin? # n</span><br><span class="line">New password:   # 输入要为root管理员设置的数据库密码</span><br><span class="line">Re-enter new password:   # 再次输入密码</span><br><span class="line">Remove anonymous users? : y     # 删除匿名账户</span><br><span class="line">Disallow root login remotely? ：y #禁止root管理员从远程登录</span><br><span class="line">Remove test database and access to it? ：y  # 删除test数据库并取消对它的访问权限</span><br><span class="line">Reload privilege tables now? : y   # 刷新授权表，让初始化后的设定立即生效</span><br></pre></td></tr></table></figure><h3 id="3-使用-1"><a href="#3-使用-1" class="headerlink" title="3.使用"></a>3.使用</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl status mysql #检验</span><br><span class="line">sudo mysql -u root -p #连接</span><br></pre></td></tr></table></figure><p>参考:<br><a href="https://blog.csdn.net/cunchi4221/article/details/107477942">https://blog.csdn.net/cunchi4221/article/details/107477942</a></p><h2 id="四、php"><a href="#四、php" class="headerlink" title=" 四、php"></a><span id="php"> 四、php</span></h2><h3 id="1-安装-2"><a href="#1-安装-2" class="headerlink" title="1.安装"></a>1.安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#安装程序包</span><br><span class="line">sudo apt-get install php7.2 </span><br><span class="line">sudo apt-get install php7.2-fpm     #nginx与php之间的桥梁</span><br><span class="line"> </span><br><span class="line">#安装必要依赖</span><br><span class="line">sudo apt-get install php-json</span><br><span class="line">sudo apt-get install php-curl </span><br><span class="line">sudo apt-get install php7.2-mysql </span><br><span class="line">sudo apt-get install php7.2-cgi</span><br></pre></td></tr></table></figure><p>验证：</p><p>开启nginx：<code>systemctl start nginx</code></p><p>打开 <a href="http://127.0.0.1/">http://127.0.0.1/</a> ，显示页面，成功</p><h3 id="2-编辑fpm配置文件"><a href="#2-编辑fpm配置文件" class="headerlink" title="2.编辑fpm配置文件"></a>2.编辑fpm配置文件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo gedit &#x2F;etc&#x2F;php&#x2F;7.2&#x2F;fpm&#x2F;php.ini </span><br><span class="line"></span><br><span class="line">#修改参数如下：</span><br><span class="line"># 778行 ;cgi.fix_fathinfo&#x3D;1  更改为  cgi.fix_fathinfo&#x3D;0</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo gedit &#x2F;etc&#x2F;php&#x2F;7.2&#x2F;fpm&#x2F;pool.d&#x2F;www.conf </span><br><span class="line"> </span><br><span class="line">#修改参数如下</span><br><span class="line">#  36行 listen &#x3D; 127.0.0.1:9000 </span><br><span class="line">#  62行 listen.allowed_clients &#x3D; 127.0.0.1</span><br><span class="line"># 113行 pm.max_children &#x3D; 50</span><br><span class="line"># 139行 pm.max_requests &#x3D; 500 </span><br><span class="line"># 340行 request_terminate_timeout &#x3D; 0 </span><br><span class="line"># 344行 rlimit_files &#x3D; 1024</span><br><span class="line"># 以上部分，包括但不限于去除前面的&quot;;&quot;</span><br></pre></td></tr></table></figure><p>php测试程序</p><p>创建文件: /var/www/html/index.php，内容如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1&gt;</span><br><span class="line">    &lt;span&gt; hello, this is test page &lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure><p>创建文件: /var/www/html/info.php，内容如下：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>配置nginx</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo gedit &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;default </span><br></pre></td></tr></table></figure><p>第44行，在index.html前面加入index.php</p><p>第56-62行，用如下内容替换</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    root           html;</span><br><span class="line">    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  &#x2F;var&#x2F;www&#x2F;html&#x2F;$fastcgi_script_name;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo service php7.2-fpm restart</span><br><span class="line">sudo service nginx restart</span><br></pre></td></tr></table></figure><p>输入网址测试：<a href="https://127.0.0.1/">https://127.0.0.1</a></p><p><img src="media/5.jpg" alt="5"></p><p><a href="https://127.0.0.1/info.php">https://127.0.0.1/info.php</a></p><p><img src="media/16158941394776.jpg"></p><p>参考：<br><a href="https://blog.csdn.net/qq_36290650/article/details/90411807">https://blog.csdn.net/qq_36290650/article/details/90411807</a></p><h3 id="3-连接数据库"><a href="#3-连接数据库" class="headerlink" title="3.连接数据库"></a>3.连接数据库</h3><p>连接root用户时一直报access denied，也没查到解决的资料。然后试着重新创建了一个用户。连接成功。</p><p><strong>创建用户</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo mysql</span><br><span class="line">create user &#39;upup&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;password&#39;;</span><br></pre></td></tr></table></figure><p><strong>创建页面</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd &#x2F;var&#x2F;www&#x2F;html</span><br><span class="line">sudo vi testdb.php</span><br><span class="line">然后输入下面的代码</span><br><span class="line">&lt;?php</span><br><span class="line">$servername &#x3D; &quot;localhost&quot;;</span><br><span class="line">$username &#x3D; &quot;upup&quot;;</span><br><span class="line">$password &#x3D; &quot;******&quot;;</span><br><span class="line">$conn &#x3D; mysqli_connect($servername, $username, $password);</span><br><span class="line">if (!$conn) &#123;</span><br><span class="line">die(&quot;Connection failed: &quot; . mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;连接成功&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后再测试，连接成功！</p><p><img src="media/16159056026142.jpg"></p><h3 id="4-安装apache"><a href="#4-安装apache" class="headerlink" title="4.安装apache"></a>4.安装apache</h3><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p><code>sudo apt-get install apache2 sudo apt-get install libapache2-mod-php</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查看状态： service apache2 status&#x2F;start&#x2F;stop&#x2F;restart</span><br><span class="line">Web目录： &#x2F;var&#x2F;www</span><br><span class="line">安装目录： &#x2F;etc&#x2F;apache2&#x2F;</span><br><span class="line">全局配置： &#x2F;etc&#x2F;apache2&#x2F;apache2.conf</span><br><span class="line">监听端口： &#x2F;etc&#x2F;apache2&#x2F;ports.conf</span><br><span class="line">虚拟主机： &#x2F;etc&#x2F;apache2&#x2F;sites-enabled&#x2F;000-default.conf</span><br><span class="line">https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_37264323&#x2F;article&#x2F;details&#x2F;90586239</span><br></pre></td></tr></table></figure><h4 id="关掉nginx进程："><a href="#关掉nginx进程：" class="headerlink" title="关掉nginx进程："></a>关掉nginx进程：</h4><p><code>systemctl stop nginx.service</code></p><h4 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">service apache2 restart</span><br><span class="line">service mysql restart</span><br></pre></td></tr></table></figure><p>验证：<br>定位目录： <code>cd /var/www/html</code><br>创建文件： <code>sudo vi testa.php</code></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php echo phpinfo();?&gt;</span><br></pre></td></tr></table></figure><p>浏览器访问:<br><img src="media/16159664668171.jpg"><br><img src="media/16159665411917.jpg"></p><h2 id="五、iis"><a href="#五、iis" class="headerlink" title=" 五、iis"></a><span id="iis"> 五、iis</span></h2><p>以前做过的课设系统和材料还在，就不做重复工作，浪费时间了<br>系统是Windows server 2008<br><img src="media/16159680174482.jpg"><br><img src="media/16159680803831.jpg"></p><h1 id="linux加固"><a href="#linux加固" class="headerlink" title=" linux加固"></a><span id="head2"> linux加固</span></h1><p>大概看了几篇系统加固的文章，重点在用户安全，文件安全和登录安全。然后再三考虑还是留着之后加固。<br>一是现在还没学那么深，加固只是按部就班的抄，回头就忘了，留着以后针对性的挨个加固可能更好一点。<br>二是万一后面实验过程中因为哪个加固而进不来我估摸着也找不到原因，到时候又会卡那很久。</p><p><a href="https://blog.csdn.net/qq_36119192/article/details/82906799">https://blog.csdn.net/qq_36119192/article/details/82906799</a><br><a href="https://www.freebuf.com/column/202728.html">https://www.freebuf.com/column/202728.html</a><br><a href="https://blog.csdn.net/mcmuyanga/article/details/108595046">https://blog.csdn.net/mcmuyanga/article/details/108595046</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web一：-web运行基础环境搭建&quot;&gt;&lt;a href=&quot;#web一：-web运行基础环境搭建&quot; class=&quot;headerlink&quot; title=&quot;web一： web运行基础环境搭建&quot;&gt;&lt;/a&gt;web一： web运行基础环境搭建&lt;/h1&gt;&lt;h1 id=&quot;环境&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="信安之路" scheme="http://xxynly.xyz/categories/%E4%BF%A1%E5%AE%89%E4%B9%8B%E8%B7%AF/"/>
    
    
    <category term="web" scheme="http://xxynly.xyz/tags/web/"/>
    
    <category term="linux" scheme="http://xxynly.xyz/tags/linux/"/>
    
    <category term="nginx" scheme="http://xxynly.xyz/tags/nginx/"/>
    
    <category term="php" scheme="http://xxynly.xyz/tags/php/"/>
    
    <category term="mysql" scheme="http://xxynly.xyz/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>虚拟机下通过Windows server 2008搭建web网站、邮件、ftp并通过Ngrok内网穿透进行外网访问</title>
    <link href="http://xxynly.xyz/2020/11/24/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8B%E9%80%9A%E8%BF%87Windows-server-2008%E6%90%AD%E5%BB%BAweb%E7%BD%91%E7%AB%99%E3%80%81%E9%82%AE%E4%BB%B6%E3%80%81ftp%E5%B9%B6%E9%80%9A%E8%BF%87ngrok%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%BF%9B%E8%A1%8C%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/"/>
    <id>http://xxynly.xyz/2020/11/24/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8B%E9%80%9A%E8%BF%87Windows-server-2008%E6%90%AD%E5%BB%BAweb%E7%BD%91%E7%AB%99%E3%80%81%E9%82%AE%E4%BB%B6%E3%80%81ftp%E5%B9%B6%E9%80%9A%E8%BF%87ngrok%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E8%BF%9B%E8%A1%8C%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/</id>
    <published>2020-11-24T11:28:30.000Z</published>
    <updated>2021-03-21T15:46:56.023Z</updated>
    
    <content type="html"><![CDATA[<p>12345<br>上山打老虎</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;12345&lt;br&gt;上山打老虎&lt;/p&gt;
</summary>
      
    
    
    
    <category term="计算机网络" scheme="http://xxynly.xyz/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="web" scheme="http://xxynly.xyz/tags/web/"/>
    
    <category term="ftp" scheme="http://xxynly.xyz/tags/ftp/"/>
    
    <category term="内网穿透" scheme="http://xxynly.xyz/tags/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    <category term="email" scheme="http://xxynly.xyz/tags/email/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://xxynly.xyz/2020/11/14/hello-world/"/>
    <id>http://xxynly.xyz/2020/11/14/hello-world/</id>
    <published>2020-11-14T13:54:08.000Z</published>
    <updated>2020-12-23T14:41:45.978Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
